#!/bin/bash

# Disable Auto-Updates for Claude Session Manager
# This script disables background tasks by setting them to 0 (not removing)

set -e

# Color codes
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
RED='\033[0;31m'
NC='\033[0m' # No Color
BOLD='\033[1m'

echo -e "${CYAN}🔧 Claude Session Manager - Disable Auto-Updates${NC}"
echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo ""

# Function to disable in shell config (set to 0, not remove)
disable_in_shell_config() {
    local shell_config="$1"
    local backup_file="${shell_config}.backup.$(date +%Y%m%d-%H%M%S)"
    
    if [[ ! -f "$shell_config" ]]; then
        echo -e "${YELLOW}⚠${NC}  $shell_config not found"
        return
    fi
    
    # Check if variables exist
    if ! grep -q "ENABLE_BACKGROUND_TASKS" "$shell_config" 2>/dev/null; then
        echo -e "${YELLOW}⚠${NC}  Background tasks not configured in $shell_config"
        return
    fi
    
    # Create backup
    cp "$shell_config" "$backup_file"
    echo -e "${GREEN}✓${NC} Backed up $shell_config to $backup_file"
    
    # Replace =1 with =0 (preserves the variables)
    sed -i.tmp 's/export ENABLE_BACKGROUND_TASKS=1/export ENABLE_BACKGROUND_TASKS=0/g' "$shell_config"
    sed -i.tmp 's/export FORCE_AUTO_BACKGROUND_TASKS=1/export FORCE_AUTO_BACKGROUND_TASKS=0/g' "$shell_config"
    rm -f "${shell_config}.tmp"
    
    echo -e "${GREEN}✓${NC} Disabled background tasks in $shell_config (set to 0)"
}

# 1. Update environment variables in shell configs
echo -e "${BOLD}1. Disabling in shell configuration...${NC}"

# Detect shell and update appropriate config
if [[ "$SHELL" == *"zsh"* ]]; then
    disable_in_shell_config "$HOME/.zshrc"
elif [[ "$SHELL" == *"bash"* ]]; then
    disable_in_shell_config "$HOME/.bashrc"
    # Also update .bash_profile for macOS
    if [[ "$OSTYPE" == "darwin"* ]]; then
        disable_in_shell_config "$HOME/.bash_profile"
    fi
fi

# 2. Update Claude settings
echo ""
echo -e "${BOLD}2. Updating Claude settings...${NC}"

CLAUDE_SETTINGS="$HOME/.claude/settings.local.json"
if [[ -f "$CLAUDE_SETTINGS" ]]; then
    # Check if env section exists
    if grep -q "ENABLE_BACKGROUND_TASKS" "$CLAUDE_SETTINGS" 2>/dev/null; then
        # Use jq if available, otherwise sed
        if command -v jq &> /dev/null; then
            # Backup first
            cp "$CLAUDE_SETTINGS" "${CLAUDE_SETTINGS}.backup.$(date +%Y%m%d-%H%M%S)"
            # Update values to "0"
            jq '.env.ENABLE_BACKGROUND_TASKS = "0" | .env.FORCE_AUTO_BACKGROUND_TASKS = "0"' "$CLAUDE_SETTINGS" > "$CLAUDE_SETTINGS.tmp" && mv "$CLAUDE_SETTINGS.tmp" "$CLAUDE_SETTINGS"
            echo -e "${GREEN}✓${NC} Disabled in Claude settings (set to 0)"
        else
            # Simple sed replacement
            sed -i.bak 's/"ENABLE_BACKGROUND_TASKS": "1"/"ENABLE_BACKGROUND_TASKS": "0"/g' "$CLAUDE_SETTINGS"
            sed -i.bak 's/"FORCE_AUTO_BACKGROUND_TASKS": "1"/"FORCE_AUTO_BACKGROUND_TASKS": "0"/g' "$CLAUDE_SETTINGS"
            echo -e "${GREEN}✓${NC} Disabled in Claude settings (set to 0)"
        fi
    else
        echo -e "${YELLOW}⚠${NC}  Background tasks not found in Claude settings"
    fi
else
    echo -e "${YELLOW}⚠${NC}  Claude settings file not found"
fi

# 3. Remove git hooks (optional - ask user)
echo ""
echo -e "${BOLD}3. Git hooks...${NC}"

if [[ -f ".git/hooks/post-commit" ]] || [[ -f ".git/hooks/post-push" ]]; then
    echo -e "${YELLOW}?${NC} Remove git hooks for auto-updates? (y/N)"
    read -r REMOVE_HOOKS
    if [[ "$REMOVE_HOOKS" == "y" ]] || [[ "$REMOVE_HOOKS" == "Y" ]]; then
        rm -f ".git/hooks/post-commit"
        rm -f ".git/hooks/post-push"
        echo -e "${GREEN}✓${NC} Removed git hooks"
    else
        echo -e "${BLUE}ℹ${NC}  Git hooks kept (they won't run with background tasks disabled)"
    fi
else
    echo -e "${BLUE}ℹ${NC}  No git hooks found in current repository"
fi

# 4. Disable for current session
echo ""
echo -e "${BOLD}4. Disabling for current session...${NC}"
export ENABLE_BACKGROUND_TASKS=0
export FORCE_AUTO_BACKGROUND_TASKS=0
echo -e "${GREEN}✓${NC} Background tasks disabled for current session"

# 5. Verify disable
echo ""
echo -e "${BOLD}5. Verifying configuration...${NC}"

# Check if variables are disabled
if [[ "$ENABLE_BACKGROUND_TASKS" == "0" ]] && [[ "$FORCE_AUTO_BACKGROUND_TASKS" == "0" ]]; then
    echo -e "${GREEN}✓${NC} Environment variables disabled:"
    echo "    ENABLE_BACKGROUND_TASKS=0"
    echo "    FORCE_AUTO_BACKGROUND_TASKS=0"
else
    echo -e "${RED}✗${NC} Failed to disable in current session"
fi

# Check which config files were updated
echo ""
echo -e "${GREEN}✓${NC} Configuration disabled in:"
if [[ -f "$HOME/.zshrc" ]] && grep -q "ENABLE_BACKGROUND_TASKS=0" "$HOME/.zshrc" 2>/dev/null; then
    echo "    ~/.zshrc"
fi
if [[ -f "$HOME/.bashrc" ]] && grep -q "ENABLE_BACKGROUND_TASKS=0" "$HOME/.bashrc" 2>/dev/null; then
    echo "    ~/.bashrc"
fi
if [[ -f "$HOME/.bash_profile" ]] && grep -q "ENABLE_BACKGROUND_TASKS=0" "$HOME/.bash_profile" 2>/dev/null; then
    echo "    ~/.bash_profile"
fi

# Summary
echo ""
echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${YELLOW}⚠️  Auto-Updates Disabled${NC}"
echo ""
echo -e "${BOLD}What's been changed:${NC}"
echo "  • Background tasks set to 0 (disabled)"
echo "  • Settings preserved for easy re-enabling"
echo "  • Git hooks optionally removed"
echo ""
echo -e "${BOLD}To re-enable:${NC}"
echo "  Run: enable-auto-updates"
echo ""
echo -e "${BOLD}To apply changes:${NC}"
echo "  Restart terminal or run: source ~/.zshrc"